const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const helmet = require("helmet");
const rateLimit = require("express-rate-limit");
const errorHandler = require("./middleware/errors.js");

const degreesRoutes = require("./routes/degrees.routes.js");
const paymentsRoutes = require("./routes/payments.routes.js");
const cmaterialsRoutes = require("./routes/courseMaterials.routes.js");
const studentsRoutes = require("./routes/students.routes.js");
const appliedStudentsRoutes = require("./routes/applied.students.routes.js");
const selectedStudents = require("./routes/slected.students.routes.js");
const adminRoutes = require("./routes/admin.routes.js");
const foodsRoutes = require("./routes/fooditem.routes.js");
const employeeRouter = require("./routes/employee.routes.js");
const attendanceRoute = require("./routes/attendance.routes.js");
const itemRouter = require("./routes/items.routes.js");
const CartsRoutes = require("./routes/Cart.routes.js");

require("dotenv").config();

// app config
const app = express();

const limiter = rateLimit({
  windowMs: 1 * 60 * 1000,
  max: 50,
  message: "Too many requests from this IP, please try again after 1 minute",
  standardHeaders: true,
  legacyHeaders: true,
});

app.use(limiter);

app.use(
  helmet({
    contentSecurityPolicy: false,
  })
);

app.use((req, res, next) => {
  res.setHeader("X-Content-Type-Options", "nosniff");
  next();
});

app.disable("x-powered-by");

app.use(
  helmet.contentSecurityPolicy({
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", process.env.TRUSTED_SCRIPTS],
      styleSrc: ["'self'", process.env.TRUSTED_STYLES],
      imgSrc: ["'self'", process.env.TRUSTED_IMAGES],
    },
  })
);

//cors
const allowedOrigins = [process.env.FRONTEND_URL];

app.use(
  cors({
    origin: function (origin, callback) {
      if (!origin || allowedOrigins.indexOf(origin) !== -1) {
        callback(null, true);
      } else {
        callback(new Error("Not allowed by CORS"));
      }
    },
  })
);

// middleware
app.use(express.json());

/********* routes **********/

//admin
app.use("/api/admin", adminRoutes);

//degrees
app.use("/api/degrees", degreesRoutes);
app.use("/api/fooditem", foodsRoutes);
app.use("/employee", employeeRouter);
app.use("/attendance", attendanceRoute);

//inventory
app.use("/item", itemRouter);

//app.use('/api/courseMaterials', courseMaterialsRoutes);
app.use("/api/cart", CartsRoutes);

//books
const bookRouter = require("./routes/Book.js");
app.use("/book", bookRouter);

const bookIssue = require("./routes/BookIssue.js");

app.use("/BookIssue", bookIssue);

//food
app.use("/api/fooditem", foodsRoutes);

//payments
app.use("/api/payments", paymentsRoutes);

//c-materials
app.use("/api/cmaterials", cmaterialsRoutes);

//students
app.use("/api/students", studentsRoutes);

//applied students
app.use("/api/applied-students", appliedStudentsRoutes);

//selected students
app.use("/api/selected-students", selectedStudents);

// error handler
app.use(errorHandler);

/********** connect to db **********/
mongoose
  .connect(process.env.MONGODB_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => {
    console.log("mongodb connection successful");
  })
  .catch((error) => {
    console.log(error);
  });

//port
const port = process.env.PORT || 4000;

app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});
